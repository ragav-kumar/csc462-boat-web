{"version":3,"sources":["elements/AxesFields.js","elements/LabelledText.js","elements/Radio.js","elements/ModeSelector.js","form/ReadForm.js","form/QueryResult.js","form/WriteForm.js","App.js","serviceWorker.js","index.js"],"names":["AxesFields","props","directions","fields","cg","moment","key","label","name","field","forEach","a","push","react_default","createElement","d","axis","direction","Range","wrapper","min","max","onChange","bound","value","className","WrapperTag","type","id","e","target","LabelledRange","htmlFor","LabelledText","textField","Input","LabelledText_LabelledText","NumberInput","TextArea","Radio","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checked","React","Component","DBRadio","src_elements_Radio","choice","ReadWriteRadio","ModeSelector","handleChange","source","queryMode","SourceSelector","templateChoice","onTemplateChange","ReadForm","onTextChange","onNumberChange","onRangeChange","data","sourceType","react","Boat","Part","Heading","Spec_Heading","Features","Location","Manufacturer","Model","Hyperlink","BuilderID","Category","Electrical","Unit_Of_Measurement","Source","Weight_Per_Unit","Quantity","Material_And_Color","Size","AxesFields_AxesFields","Center_Of_Gravity","Moment_Of_Inertia","onSourceChange","onSubmit","QueryResult","console","log","result","main_default","src","WriteForm","input","targetType","onTargetChange","writeTemplates","boatPart","Parent","long","tran","vert","part","Weight","App","handleTemplateSwitch","setState","dataType","write","JSON","stringify","handleReadChange","read","state","split","handleWriteChange","event","handleSubmit","preventDefault","query","mode","dbChoice","args","parse","error","alert","Axios","post","then","response","objectSpread","form","_this2","ReadForm_ReadForm","src_form_WriteForm","ModeSelector_ModeSelector","defineProperty","src_form_QueryResult","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09ecd3e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AxesFields.css';\r\n\r\nfunction AxesFields(props) {\r\n\t/*\r\n\tCenter_Of_Gravity: {  // Most visually coherent approach is this way\r\n\t\t\"long\": { min: null, max: null },\r\n\t\t\"tran\": { min: null, max: null },\r\n\t\t\"vert\": { min: null, max: null },\r\n\t},\r\n\tMoment_Of_Inertia: {\r\n\t\t\"long\": { min: null, max: null },\r\n\t\t\"tran\": { min: null, max: null },\r\n\t\t\"vert\": { min: null, max: null },\r\n\t},\r\n\t*/\r\n\t// Need to send up source, direction, bound, value\r\n\tconst handleChange = (axis, direction) => (name, bound, value) => {\r\n\t\tprops.onChange(axis, direction, bound, value);\r\n\t}\r\n\t// I would rather write a ton of looping code than do this bit of repetition manually.\r\n\t// This was a terrible idea.\r\n\tconst axes = [\r\n\t\t{\r\n\t\t\tlabel: \"Center of Gravity\",\r\n\t\t\tname: \"Center_Of_Gravity\",\r\n\t\t\tfield: \"cg\",\r\n\t\t}, {\r\n\t\t\tlabel: \"Moment of Inertia\",\r\n\t\t\tname: \"Moment_Of_Inertia\",\r\n\t\t\tfield: \"moment\",\r\n\t\t}\r\n\t];\r\n\tconst directions = [\"long\", \"tran\", \"vert\"];\r\n\tlet fields = {cg: [], moment: []};\r\n\tlet key = 0;\r\n\taxes.forEach(a => {\r\n\t\tfields[a.field].push(<th key={key++}>{a.label}</th>);\r\n\t\tdirections.forEach(d => {\r\n\t\t\tfields[a.field].push(\r\n\t\t\t\t<Range\r\n\t\t\t\t\tkey={key++}\r\n\t\t\t\t\twrapper=\"td\"\r\n\t\t\t\t\tname={\"axis-\" + a.field + \"-\" + d}\r\n\t\t\t\t\tmin={props[a.field][d].min}\r\n\t\t\t\t\tmax={props[a.field][d].max}\r\n\t\t\t\t\tonChange={handleChange(a.field, d)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t});\r\n\treturn (\r\n\t\t<table className=\"axes-fields\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th>Longitudinal</th>\r\n\t\t\t\t\t<th>Transverse</th>\r\n\t\t\t\t\t<th>Vertical</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody className=\"axis-fields\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{fields.cg}\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{fields.moment}\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\nfunction Range(props) {\r\n\tconst WrapperTag = (props.wrapper ? props.wrapper : \"div\");\r\n\tconst name = props.name;\r\n\treturn (\r\n\t\t<WrapperTag className=\"Range\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tname={name + \"-min\"}\r\n\t\t\t\tid={name + \"-min\"}\r\n\t\t\t\tvalue={props.min || \"\"}\r\n\t\t\t\tonChange={e => props.onChange(name, \"min\", e.target.value)}\r\n\t\t\t/>\r\n\t\t\t&nbsp;to&nbsp;\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tname={name + \"-max\"}\r\n\t\t\t\tid={name + \"-max\"}\r\n\t\t\t\tvalue={props.max || \"\"}\r\n\t\t\t\tonChange={e => props.onChange(name, \"max\", e.target.value)}\r\n\t\t\t/>\r\n\t\t</WrapperTag>\r\n\t);\r\n}\r\nfunction LabelledRange(props) {\r\n\tconst htmlFor = props.name + \"-range\";\r\n\r\n\treturn(\r\n\t\t<div className=\"LabelledRange\">\r\n\t\t\t<label htmlFor={htmlFor}>\r\n\t\t\t\t{props.label}\r\n\t\t\t</label>\r\n\t\t\t<Range\r\n\t\t\t\tname={props.name}\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport {\r\n\tAxesFields,\r\n\tRange,\r\n\tLabelledRange\r\n};","import React from 'react';\r\nimport './LabelledText.css';\r\n\r\nfunction LabelledText(props) {\r\n\tconst htmlFor = props.name + \"-field\";\r\n\tlet className = \"LabelledText\";\r\n\tif (props.className) {\r\n\t\tclassName += \" \" + props.className;\r\n\t}\r\n\treturn(\r\n\t\t<div className={className}>\r\n\t\t\t<label htmlFor={htmlFor} className={className}>\r\n\t\t\t\t{props.label}\r\n\t\t\t</label>\r\n\t\t\t{props.textField}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Input(props) {\r\n\tconst htmlFor = props.name + \"-field\";\r\n\tconst field = (\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tname={\"text_\" + props.name}\r\n\t\t\tid={htmlFor}\r\n\t\t\tvalue={props.value || \"\"}\r\n\t\t\tonChange={e => props.onChange(props.name, e.target.value)}\r\n\t\t/>\r\n\t);\r\n\treturn(\r\n\t\t<LabelledText\r\n\t\t\tname={props.name}\r\n\t\t\tclassName=\"Input\"\r\n\t\t\tlabel={props.label}\r\n\t\t\ttextField={field}\r\n\t\t/>\r\n\t);\r\n}\r\nfunction NumberInput(props) {\r\n\tconst htmlFor = props.name + \"-field\";\r\n\tconst field = (\r\n\t\t<input\r\n\t\t\ttype=\"number\"\r\n\t\t\tname={\"number_\" + props.name}\r\n\t\t\tid={htmlFor}\r\n\t\t\tvalue={props.value || \"\"}\r\n\t\t\tonChange={e => props.onChange(props.name, e.target.value)}\r\n\t\t/>\r\n\t);\r\n\treturn(\r\n\t\t<LabelledText\r\n\t\t\tname={props.name}\r\n\t\t\tclassName=\"Input\"\r\n\t\t\tlabel={props.label}\r\n\t\t\ttextField={field}\r\n\t\t/>\r\n\t);\r\n}\r\nfunction TextArea(props) {\r\n\tconst htmlFor = props.name + \"-field\";\r\n\tconst field = (\r\n\t\t<textarea\r\n\t\t\tname={props.name}\r\n\t\t\tid={htmlFor}\r\n\t\t\tvalue={props.value}\r\n\t\t\tonChange={props.onChange}\r\n\t\t/>\r\n\t);\r\n\treturn(\r\n\t\t<LabelledText\r\n\t\t\tname={props.name}\r\n\t\t\tclassName=\"TextArea\"\r\n\t\t\tlabel={props.label}\r\n\t\t\ttextField={field}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tInput,\r\n\tTextArea,\r\n\tNumberInput\r\n}","import React from 'react';\r\nimport './Radio.css';\r\n\r\nclass Radio extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.htmlFor = \"radio-\" + props.value;\r\n\t}\r\n\trender() {\r\n\t\t// const checked = this.props.selected ? \"checked\" : null;\r\n\t\treturn (\r\n\t\t\t<div className=\"Radio\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\tid={this.htmlFor}\r\n\t\t\t\t\tvalue={this.props.value}\r\n\t\t\t\t\tchecked={this.props.checked}\r\n\t\t\t\t\tonChange={this.props.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor={this.htmlFor} label={this.props.label}>\r\n\t\t\t\t\t{this.props.label}\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Radio;","import React from 'react';\r\nimport Radio from \"./Radio\";\r\nimport './ModeSelector.css';\r\n\r\nfunction DBRadio(props) {\r\n\treturn (\r\n\t\t<div className=\"DBRadio\">\r\n\t\t\t<Radio\r\n\t\t\t\tvalue=\"sql\"\r\n\t\t\t\tlabel=\"MySQL\"\r\n\t\t\t\tchecked={props.choice === \"sql\"}\r\n\t\t\t\tonChange={e => props.onChange(e)}\r\n\t\t\t/>\r\n\t\t\t<Radio\r\n\t\t\t\tvalue=\"mongo\"\r\n\t\t\t\tlabel=\"MongoDB\"\r\n\t\t\t\tchecked={props.choice === \"mongo\"}\r\n\t\t\t\tonChange={e => props.onChange(e)}\r\n\t\t\t/>\r\n\t\t\t<Radio\r\n\t\t\t\tvalue=\"both\"\r\n\t\t\t\tlabel=\"Both (Performance Comparison)\"\r\n\t\t\t\tchecked={props.choice === \"both\"}\r\n\t\t\t\tonChange={e => props.onChange(e)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ReadWriteRadio(props) {\r\n\treturn (\r\n\t\t<div className=\"ReadWriteRadio\">\r\n\t\t\t<Radio\r\n\t\t\t\tvalue=\"read\"\r\n\t\t\t\tlabel=\"Read\"\r\n\t\t\t\tchecked={props.choice === \"read\"}\r\n\t\t\t\tonChange={e => props.onChange(e)}\r\n\t\t\t/>\r\n\t\t\t<Radio\r\n\t\t\t\tvalue=\"write\"\r\n\t\t\t\tlabel=\"Write\"\r\n\t\t\t\tchecked={props.choice === \"write\"}\r\n\t\t\t\tonChange={e => props.onChange(e)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ModeSelector(props) {\r\n\tconst handleChange = source => e => props.onChange(source, e.target.value);\r\n\treturn (\r\n\t\t<div className=\"ModeSelector\">\r\n\t\t\t<DBRadio\r\n\t\t\t\tchoice={props.choice}\r\n\t\t\t\tonChange={handleChange(\"dbChoice\")}\r\n\t\t\t/>\r\n\t\t\t<ReadWriteRadio\r\n\t\t\t\tchoice={props.queryMode}\r\n\t\t\t\tonChange={handleChange(\"queryMode\")}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n/**\r\n * Inputs: template\r\n * @param {*} props \r\n */\r\nfunction SourceSelector(props) {\r\n\treturn (\r\n\t\t<div className=\"SourceSelector\">\r\n\t\t\t<h3>Replace contents with template JSON:</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<Radio\r\n\t\t\t\t\tname=\"template-select\"\r\n\t\t\t\t\tvalue=\"parts\"\r\n\t\t\t\t\tlabel=\"New Part\"\r\n\t\t\t\t\tchecked={props.templateChoice === \"parts\"}\r\n\t\t\t\t\tonChange={e => props.onTemplateChange(\"parts\")}\r\n\t\t\t\t/>\r\n\t\t\t\t<Radio\r\n\t\t\t\t\tname=\"template-select\"\r\n\t\t\t\t\tvalue=\"boatParts\"\r\n\t\t\t\t\tlabel=\"New BoatPart\"\r\n\t\t\t\t\tchecked={props.templateChoice === \"boatParts\"}\r\n\t\t\t\t\tonChange={e => props.onTemplateChange(\"boatParts\")}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport {\r\n\tModeSelector,\r\n\tSourceSelector\r\n};","import React, {Fragment} from 'react';\r\nimport {AxesFields, LabelledRange} from \"../elements/AxesFields\";\r\nimport { Input, NumberInput } from \"../elements/LabelledText\";\r\nimport { SourceSelector } from \"../elements/ModeSelector\";\r\nimport './ReadForm.css';\r\n\r\nexport default function ReadForm(props) {\r\n\t// Prepare the variants of onChange for the field types\r\n\tconst onTextChange = (source, value) => {\r\n\t\tprops.onChange({type: \"string\", field: source}, value);\r\n\t}\r\n\tconst onNumberChange = (source, value) => {\r\n\t\tprops.onChange({\r\n\t\t\ttype: \"number\",\r\n\t\t\tfield: source,\r\n\t\t}, value);\r\n\t}\r\n\tconst onRangeChange = (source, bound, value) => {\r\n\t\tprops.onChange({\r\n\t\t\ttype: \"range\",\r\n\t\t\tfield: source,\r\n\t\t\tbound: bound\r\n\t\t}, value);\r\n\t}\r\n\tconst onAxesChange = (source, direction, bound, value) => {\r\n\t\tprops.onChange({\r\n\t\t\ttype: \"axes\",\r\n\t\t\taxis: source,\r\n\t\t\tdirection: direction,\r\n\t\t\tbound: bound,\r\n\t\t}, value);\r\n\t}\r\n\tconst onFeatureChange = (source, value) => {\r\n\t\tprops.onChange({\r\n\t\t\ttype: \"features\",\r\n\t\t\tfield: source,\r\n\t\t}, value);\r\n\t}\r\n\tconst data = props.data;\r\n\t// We use props.sourceType to determine what fields are shown\r\n\tlet fields;\r\n\tif (props.sourceType === 'boatParts') { // boatParts\r\n\t\tfields = (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"textFields\">\r\n\t\t\t\t\t<NumberInput\r\n\t\t\t\t\t\tname=\"Boat\"\r\n\t\t\t\t\t\tlabel=\"Boat ID:\"\r\n\t\t\t\t\t\tvalue={data.Boat}\r\n\t\t\t\t\t\tonChange={onNumberChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInput\r\n\t\t\t\t\t\tname=\"Part\"\r\n\t\t\t\t\t\tlabel=\"Part ID (skip fields marked with 'Part' if you enter this):\"\r\n\t\t\t\t\t\tvalue={data.Part}\r\n\t\t\t\t\t\tonChange={onNumberChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NumberInput\r\n\t\t\t\t\t\tname=\"Parent\"\r\n\t\t\t\t\t\tlabel=\"Parent Part ID:\"\r\n\t\t\t\t\t\tvalue={data.Part}\r\n\t\t\t\t\t\tonChange={onNumberChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Heading\"\r\n\t\t\t\t\t\tlabel=\"Heading:\"\r\n\t\t\t\t\t\tvalue={data.Heading}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Spec_Heading\"\r\n\t\t\t\t\t\tlabel=\"Spec Heading:\"\r\n\t\t\t\t\t\tvalue={data.Spec_Heading}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Features\"\r\n\t\t\t\t\t\tlabel=\"Features (Comma separated):\"\r\n\t\t\t\t\t\tvalue={data.Features}\r\n\t\t\t\t\t\tonChange={onFeatureChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Location\"\r\n\t\t\t\t\t\tlabel=\"Location (on boat):\"\r\n\t\t\t\t\t\tvalue={data.Location}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Manufacturer\"\r\n\t\t\t\t\t\tlabel=\"Preferred Manufacturer (Part):\"\r\n\t\t\t\t\t\tvalue={data.Manufacturer}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Model\"\r\n\t\t\t\t\t\tlabel=\"Model Number (Part):\"\r\n\t\t\t\t\t\tvalue={data.Model}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Hyperlink\"\r\n\t\t\t\t\t\tlabel=\"Hyperlink (Part):\"\r\n\t\t\t\t\t\tvalue={data.Hyperlink}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"BuilderID\"\r\n\t\t\t\t\t\tlabel=\"BuilderID (Part):\"\r\n\t\t\t\t\t\tvalue={data.BuilderID}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Category\"\r\n\t\t\t\t\t\tlabel=\"Category (Part):\"\r\n\t\t\t\t\t\tvalue={data.Category}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Electrical\"\r\n\t\t\t\t\t\tlabel=\"Electrical (Part):\"\r\n\t\t\t\t\t\tvalue={data.Electrical}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Unit_Of_Measurement\"\r\n\t\t\t\t\t\tlabel=\"Units of Measurement (Part):\"\r\n\t\t\t\t\t\tvalue={data.Unit_Of_Measurement}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Source\"\r\n\t\t\t\t\t\tlabel=\"Source (Part):\"\r\n\t\t\t\t\t\tvalue={data.Source}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LabelledRange\r\n\t\t\t\t\t\tname=\"Weight_Per_Unit\"\r\n\t\t\t\t\t\tlabel=\"Weight Per Unit (Part):\"\r\n\t\t\t\t\t\tvalue={data.Weight_Per_Unit}\r\n\t\t\t\t\t\tonChange={onRangeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LabelledRange\r\n\t\t\t\t\t\tname=\"Quantity\"\r\n\t\t\t\t\t\tlabel=\"Quantity\"\r\n\t\t\t\t\t\tvalue={data.Quantity}\r\n\t\t\t\t\t\tonChange={onRangeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Material_And_Color\"\r\n\t\t\t\t\t\tlabel=\"Material / Color:\"\r\n\t\t\t\t\t\tvalue={data.Material_And_Color}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Size\"\r\n\t\t\t\t\t\tlabel=\"Size (Part)\"\r\n\t\t\t\t\t\tvalue={data.Size}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AxesFields\r\n\t\t\t\t\tcg={data.Center_Of_Gravity}\r\n\t\t\t\t\tmoment={data.Moment_Of_Inertia}\r\n\t\t\t\t\tonChange={onAxesChange}\r\n\t\t\t\t/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t} else { // parts\r\n\t\tfields = (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"textFields\">\r\n\t\t\t\t\t<NumberInput\r\n\t\t\t\t\t\tname=\"Part\"\r\n\t\t\t\t\t\tlabel=\"Part ID (This will cause all other fields to be ignored):\"\r\n\t\t\t\t\t\tvalue={data.Part}\r\n\t\t\t\t\t\tonChange={onNumberChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Manufacturer\"\r\n\t\t\t\t\t\tlabel=\"Manufacturer:\"\r\n\t\t\t\t\t\tvalue={data.Manufacturer}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Model\"\r\n\t\t\t\t\t\tlabel=\"Model Number:\"\r\n\t\t\t\t\t\tvalue={data.Model}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Hyperlink\"\r\n\t\t\t\t\t\tlabel=\"Hyperlink:\"\r\n\t\t\t\t\t\tvalue={data.Hyperlink}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"BuilderID\"\r\n\t\t\t\t\t\tlabel=\"BuilderID:\"\r\n\t\t\t\t\t\tvalue={data.BuilderID}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Category\"\r\n\t\t\t\t\t\tlabel=\"Category:\"\r\n\t\t\t\t\t\tvalue={data.Category}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Electrical\"\r\n\t\t\t\t\t\tlabel=\"Electrical:\"\r\n\t\t\t\t\t\tvalue={data.Electrical}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Unit_Of_Measurement\"\r\n\t\t\t\t\t\tlabel=\"Units of Measurement:\"\r\n\t\t\t\t\t\tvalue={data.Unit_Of_Measurement}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Source\"\r\n\t\t\t\t\t\tlabel=\"Source:\"\r\n\t\t\t\t\t\tvalue={data.Source}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LabelledRange\r\n\t\t\t\t\t\tname=\"Weight_Per_Unit\"\r\n\t\t\t\t\t\tlabel=\"Weight Per Unit:\"\r\n\t\t\t\t\t\tvalue={data.Weight_Per_Unit}\r\n\t\t\t\t\t\tonChange={onRangeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tname=\"Size\"\r\n\t\t\t\t\t\tlabel=\"Size:\"\r\n\t\t\t\t\t\tvalue={data.Size}\r\n\t\t\t\t\t\tonChange={onTextChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"ReadForm\">\r\n\t\t\t<SourceSelector templateChoice={props.sourceType} onTemplateChange={props.onSourceChange}/>\r\n\t\t\t<form onSubmit={props.onSubmit}>\r\n\t\t\t\t{fields}\r\n\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport ReactJson from \"react-json-view\";\r\nimport './QueryResult.css';\r\n\r\nclass QueryResult extends React.Component {\r\n\trender() {\r\n\t\tconsole.log(this.props.result);\r\n\t\tif (typeof this.props.result !== 'string') {\r\n\t\t\treturn (\r\n\t\t\t\t<ReactJson src={this.props.result} />\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<pre className=\"QueryResult\">{this.props.result}</pre>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default QueryResult;","import React from 'react';\r\nimport {TextArea} from \"../elements/LabelledText\";\r\nimport { SourceSelector } from \"../elements/ModeSelector\";\r\nimport './WriteForm.css';\r\n\r\nconst WriteForm = (props) => {\r\n\treturn(\r\n\t\t<div className=\"WriteForm\">\r\n\t\t\t<form onSubmit={props.onSubmit}>\r\n\t\t\t\t<TextArea\r\n\t\t\t\t\tname=\"input-json\"\r\n\t\t\t\t\tlabel=\"Insert JSON of data to be written.\"\r\n\t\t\t\t\tvalue={props.input}\r\n\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t</form>\r\n\t\t\t<SourceSelector templateChoice={props.targetType} onTemplateChange={props.onTargetChange}/>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default WriteForm;","import React from 'react';\r\nimport './App.css';\r\nimport ReadForm from './form/ReadForm';\r\nimport QueryResult from './form/QueryResult';\r\nimport WriteForm from \"./form/WriteForm\";\r\nimport {ModeSelector} from \"./elements/ModeSelector\";\r\nimport Axios from 'axios';\r\n\r\nconst writeTemplates = {\r\n\tboatPart: { // This is the template for a `boatPart` write request. A switch will swap it out with a sample `part` write request\r\n\t\tBoat: 0, // ID #\r\n\t\tPart: 0, // ID #\r\n\t\tHeading: \"\",\r\n\t\tSpec_Heading: \"\",\r\n\t\tFeatures: [],\r\n\t\tLocation: \"\",\r\n\t\tManufacturer: \"\", // Preferred MFG, to be precise\r\n\t\tQuantity: 0,\r\n\t\tParent: 0,\r\n\t\tCenter_Of_Gravity: { \"long\": 0, \"tran\": 0, \"vert\": 0 },\r\n\t\tMoment_Of_Inertia: { \"long\": 0, \"tran\": 0, \"vert\": 0 },\r\n\t\tMaterial_And_Color: \"\",\r\n\t},\r\n\tpart: {\r\n\t\tManufacturer: \"\", // This needs to be here, I think, but its not preferred MFG. Maybe to distinguish multiple MFGs who make the same part?\r\n\t\tModel: \"\",\r\n\t\tHyperlink: \"\",\r\n\t\tBuilderID: \"\",\r\n\t\tCategory: \"\",\r\n\t\tElectrical: \"\",\r\n\t\tUnit_Of_Measurement: \"\",\r\n\t\tSource: \"\",\r\n\t\tWeight: 0.0,\r\n\t\tSize: \"\",\r\n\t}\r\n}\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tqueryMode: 'read', // read, write\r\n\t\t\tdbChoice: 'sql',   // sql, mongo, both\r\n\t\t\tdataType: 'boatParts', // parts, boatParts\r\n\t\t\t//Read\r\n\t\t\tread: {\r\n\t\t\t\tBoat: null, // Boat ID #\r\n\t\t\t\tPart: null, // Part ID #\r\n\t\t\t\tHeading: null, // Heading text\r\n\t\t\t\tSpec_Heading: null, // Spec_Heading text\r\n\t\t\t\tFeatures: [], // Array of features\r\n\t\t\t\tModel: null, // Model text\r\n\t\t\t\tHyperlink: null, // Valid URL\r\n\t\t\t\tSource: null, // text\r\n\t\t\t\tManufacturer: null, // text. Corresponds to Preferred MFG in original data\r\n\t\t\t\tLocation: null, // location on boat, needed for boatPart\r\n\t\t\t\tCategory: null, // Category, part of Part (i.e. it's innate)\r\n\t\t\t\tMaterial_And_Color: null, // This should probably be \"Or\" TBH\r\n\t\t\t\tSize: null, // text, because mixed units\r\n\t\t\t\tUnit_Of_Measurement: null,\r\n\t\t\t\tWeight_Per_Unit: { min: null, max: null }, // This is part of why we need the units field\r\n\t\t\t\tQuantity: { min: null, max: null }, // This plus weight gives us Weight_Total\r\n\t\t\t\tCenter_Of_Gravity: {  // Most visually coherent approach is this way\r\n\t\t\t\t\t\"long\": { min: null, max: null },\r\n\t\t\t\t\t\"tran\": { min: null, max: null },\r\n\t\t\t\t\t\"vert\": { min: null, max: null },\r\n\t\t\t\t},\r\n\t\t\t\tMoment_Of_Inertia: {\r\n\t\t\t\t\t\"long\": { min: null, max: null },\r\n\t\t\t\t\t\"tran\": { min: null, max: null },\r\n\t\t\t\t\t\"vert\": { min: null, max: null },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t//Write\r\n\t\t\twrite: JSON.stringify(writeTemplates.boatPart, null, 2), // Did you know you can force JSON to pretty print? I didn't.\r\n\t\t};\r\n\t}\r\n\thandleTemplateSwitch = (value) => {\r\n\t\tthis.setState({\r\n\t\t\tdataType: value,\r\n\t\t\twrite: JSON.stringify(writeTemplates[value], null, 2)\r\n\t\t})\r\n\t}\r\n\thandleReadChange = (source, value) => {\r\n\t\t// `source` is an object whose structure varies based on its `type` property.\r\n\t\tlet read = this.state.read;\r\n\t\tswitch (source.type) {\r\n\t\t\tcase \"string\": // text field\r\n\t\t\tcase \"number\": // number (ID) field which is not a range\r\n\t\t\t\tread[source.field] = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"range\": // Numerical range (i.e. min & max)\r\n\t\t\t\tread[source.field][source.bound] = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"axes\": // One of the two axes\r\n\t\t\t\tread[source.axis][source.direction][source.bound] = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"features\": // For features, need to split value into an array\r\n\t\t\t\tread.Features = value.split(/[\\s,]+/); // Allows spaces AND commas between features\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: // error\r\n\t\t\t\tconsole.log(\"ERROR: INVALID CHANGE\");\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({read: read});\r\n\t}\r\n\thandleWriteChange = (event) => {\r\n\t\tthis.setState({write: event.target.value});\r\n\t}\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// Two cases. Read => this is a form submit. Write => Send Textarea json\r\n\t\tlet query = {\r\n\t\t\tmode: this.state.queryMode,\r\n\t\t\tsource: this.state.dbChoice,\r\n\t\t};\r\n\t\tif (this.state.queryMode === 'read') { // Read\r\n\t\t\tquery.args = this.state.read;\r\n\t\t} else { // write\r\n\t\t\ttry {\r\n\t\t\t\tquery.args = JSON.parse(this.state.write);\r\n\t\t\t} catch (error) {\r\n\t\t\t\talert(\"Invalid JSON!\");\r\n\t\t\t\tthis.setState({result: error});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Okay, query built. Send it off to our controller!\r\n\t\t// const showResult = (json) => this.setState({result: json});\r\n\t\tAxios.post('/query', query)\r\n\t\t\t.then(response => {\r\n\t\t\t\t// this.setState({result: JSON.stringify(response.data, null, 2)});\r\n\t\t\t\tthis.setState({result: response.data});\r\n\t\t\t\tconsole.log({...response.data});\r\n\t\t\t})\r\n\t\t\t// .error(error => this.setState({result: error}))\r\n\t\t;\r\n\t}\r\n\trender() {\r\n\t\tlet form;\r\n\t\t// Decide which form to display based on Query mode\r\n\t\tif (this.state.queryMode === 'read') {\r\n\t\t\tform = (\r\n\t\t\t\t<ReadForm\r\n\t\t\t\t\tdata={this.state.read}\r\n\t\t\t\t\tsourceType={this.state.dataType}\r\n\t\t\t\t\tonChange={this.handleReadChange}\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\tonSourceChange={this.handleTemplateSwitch}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tform = (\r\n\t\t\t\t<WriteForm\r\n\t\t\t\t\tinput={this.state.write}\r\n\t\t\t\t\ttargetType={this.state.dataType}\r\n\t\t\t\t\tonChange={this.handleWriteChange}\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\tonTargetChange={this.handleTemplateSwitch}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t<h1>Boat Data Store Query App</h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t<ModeSelector\r\n\t\t\t\t\tchoice={this.state.dbChoice}\r\n\t\t\t\t\tqueryMode={this.state.queryMode}\r\n\t\t\t\t\tonChange={(source, value) => this.setState({ [source]: value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<main>\r\n\t\t\t\t\t{form}\r\n\t\t\t\t\t<QueryResult result={this.state.result} />\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}